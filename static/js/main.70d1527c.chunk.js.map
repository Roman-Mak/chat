{"version":3,"sources":["components/Message/Message.module.css","components/Message/wolf.jpg","components/Qualities/Quality/Quality.module.css","components/Qualities/Qualities.module.css","components/Counter/Counter.module.css","components/Counter/Value/Value.module.css","components/Counter/ShowName/ShowName.module.css","components/Message/Message.jsx","components/Qualities/Quality/Quality.jsx","components/Qualities/Qualities.jsx","components/Counter/Value/Value.jsx","components/Counter/InputName/AddNameButton/AddNameButton.jsx","components/Counter/InputName/InputName.jsx","components/Counter/ShowName/ShowName.jsx","components/Counter/Counter.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Message","className","style","message","avatar","src","ava","corner","messageArea","name","content","time","Quality","props","styles","quality","Qualities","render","newQualities","qualities","map","index","key","id","React","Component","Value","value","counterValue","AddNameButton","onClick","onAddAlertClick","InputName","state","inputTextFn","e","setState","currentTarget","addName","alert","onChange","type","ShowName","names","n","Counter","counter","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.70d1527c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3AThp\",\"avatar\":\"Message_avatar__2S2X7\",\"corner\":\"Message_corner__22seH\",\"messageArea\":\"Message_messageArea__24f77\",\"name\":\"Message_name__zQTIx\",\"content\":\"Message_content__3o4ch\",\"time\":\"Message_time__2ilzP\"};","module.exports = __webpack_public_path__ + \"static/media/wolf.1ec4071b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondQual\":\"Quality_secondQual__39m_t\",\"qual\":\"Quality_qual__2qSwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qualities\":\"Qualities_qualities__3-vU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__OmutP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"Value_value__1sQkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"ShowName_names__1Hbhr\"};","import React from 'react';\r\nimport style from './Message.module.css';\r\nimport ava from './wolf.jpg';\r\n\r\nconst Message = () => {\r\n    return (\r\n        <div className={style.message}>\r\n            <img className={style.avatar} src={ava} />\r\n            <div className={style.corner} />\r\n            <div className={style.messageArea}>\r\n                <div className={style.name}>Роман Макаревич</div>\r\n                <div className={style.content}>Выполнил второе заданиееееееееееееееееееееееееееееееееееееееееееееее</div>\r\n                <div className={style.time}>07:15</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport style from \"./Quality.module.css\"\r\n\r\nconst Quality = (props) => {\r\n        return (\r\n            <div className={style[props.styles]}>{props.quality}</div>\r\n        );\r\n    };\r\n\r\nexport default Quality;","import React from \"react\";\r\nimport Quality from \"./Quality/Quality\";\r\nimport style from \"./Qualities.module.css\"\r\n\r\nclass Qualities extends React.Component {\r\n\r\n    render = () => {\r\n\r\n        let newQualities = this.props.qualities.map((quality, index) => {\r\n            return <Quality\r\n                key={quality.id}\r\n                quality={quality.quality}\r\n                styles={index === 1 ? \"secondQual\" : \"qual\"}/>\r\n        });\r\n\r\n        return (\r\n            <div className={style.qualities}>\r\n            {newQualities}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Qualities;","import React from 'react';\r\nimport style from './Value.module.css';\r\n\r\n\r\nconst Value = (props) => {\r\n    return <span className={style.value}>Counter: {props.counterValue}</span>\r\n};\r\n\r\n\r\nexport default Value;","import React from 'react';\r\n\r\n\r\nconst AddNameButton = (props) => {\r\n    return <button onClick={props.onAddAlertClick}>Add Name</button>\r\n\r\n};\r\n\r\n\r\nexport default AddNameButton;","import React from 'react';\r\nimport AddNameButton from \"./AddNameButton/AddNameButton\";\r\n\r\n\r\nclass InputName extends React.Component {\r\n\r\n    state = {\r\n        name: \"\"\r\n    };\r\n\r\n    inputTextFn = (e) => {\r\n        this.setState({name: e.currentTarget.value})\r\n    };\r\n\r\n    onAddAlertClick = () => {\r\n        this.props.addName(this.state.name);\r\n        if (this.state.name) {\r\n            alert(`Привет, ${this.state.name}!`);\r\n        }\r\n        this.setState({name: \"\"})\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <input onChange={this.inputTextFn} value={this.state.name} type=\"text\"/>\r\n                <AddNameButton onAddAlertClick={this.onAddAlertClick}/>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\n\r\nexport default InputName;","import React from 'react';\r\nimport style from './ShowName.module.css';\r\n\r\n\r\nconst ShowName = (props) => {\r\n    return <div className={style.names}>{props.names.map(n => <div>{n.name}</div>)}</div>\r\n};\r\n\r\n\r\nexport default ShowName;","import React from 'react';\r\nimport style from './Counter.module.css';\r\nimport Value from \"./Value/Value\";\r\nimport InputName from \"./InputName/InputName\";\r\nimport ShowName from \"./ShowName/ShowName\";\r\n\r\n\r\nconst Counter = (props) => {\r\n        return (\r\n            <div className={style.counter}>\r\n                <Value counterValue={props.counterValue}/>\r\n                <InputName names={props.names} addName={props.addName}/>\r\n                <ShowName names={props.names}/>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Counter;","import React from 'react';\nimport './App.css';\nimport Message from \"./components/Message/Message\";\nimport Qualities from \"./components/Qualities/Qualities\";\nimport Counter from \"./components/Counter/Counter\";\n\nclass App extends React.Component {\n\n    state= {\n        qualities: [\n            {quality: \"Ловкий\", id: 1},\n            {quality: \"Сильный\", id: 2},\n            {quality: \"Смелый\", id: 3}\n        ],\n        value: 0,\n        names: []\n};\n\n    addName = (name) => {\n        this.setState({\n            value: this.state.value + 1,\n            names:[...this.state.names, {name: name}]\n        })\n    };\n\n\n    render = () => {\n\n        return (\n            <div className=\"flex\">\n                <Message />\n                <Qualities qualities={this.state.qualities}/>\n                <Counter addName={this.addName} counterValue={this.state.value} names={this.state.names}/>\n            </div>\n        );\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}