{"version":3,"sources":["components/Monday/Message/wolf.jpg","components/Monday/Qualities/Quality/Quality.module.css","components/Monday/Qualities/Qualities.module.css","components/Monday/CounterNames/CounterNames.module.css","components/Monday/CounterNames/Value/Value.module.css","components/Monday/CounterNames/ShowName/ShowName.module.css","assets/img/todolists-preloader.svg","components/Monday/Message/Message.jsx","components/Monday/Qualities/Quality/Quality.jsx","components/Monday/Qualities/Qualities.jsx","components/Monday/CounterNames/Value/Value.jsx","components/Monday/CounterNames/ShowName/ShowName.jsx","components/Monday/CounterNames/AddNameButton/AddNameButton.jsx","components/Monday/CounterNames/InputAddItem/InputAddItem.jsx","components/Monday/CounterNames/CounterNames.jsx","components/Monday/Monday.jsx","components/Navbar/Navbar.jsx","components/Tuesday/TodoListTask.jsx","components/Tuesday/TodoListTasks.jsx","components/Tuesday/TodoListFooter.jsx","components/Tuesday/TodoListTitle.jsx","components/Tuesday/AddNewItemForm.jsx","components/Tuesday/stateFunctions.js","components/Tuesday/TodoList.jsx","components/common/Preloader.jsx","redux/loadingReducer.js","components/Tuesday/Tuesday.jsx","App.jsx","serviceWorker.js","redux/store.js","index.jsx","components/Monday/Message/Message.module.css","components/Navbar/Navbar.module.css"],"names":["module","exports","Message","className","style","message","avatar","src","ava","corner","messageArea","name","content","time","Quality","props","styles","quality","Qualities","state","qualities","id","render","newQualities","map","index","key","React","Component","Value","counterValue","value","ShowName","names","n","i","AddNameButton","addName","onClick","InputAddItem","currentName","errorStatus","setErrorStatus","errStatus","setState","onCurrentNameChange","e","currentTarget","newCurrentName","onKeyPress","inputClass","onChange","type","placeholder","CounterNames","alert","length","counter","Monday","Navbar","navbar","navbarPanel","nav","to","activeClassName","active","navigation","TodoListTask","onIsDoneChanged","changeStatus","task","checked","onTitleChanged","changeTitle","onPriorityChange","changePriority","editTitleMode","editPriorityMode","taskHover","activateEditMode","target","deactivateEditMode","deleteTask","handleMouseIn","handleMouseOut","containerCssClass","isDone","onMouseOver","onMouseOut","onBlur","autoFocus","title","size","disabled","selected","priority","created","updated","finished","TodoListTasks","tasksElements","tasks","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","TodoListTitle","AddNewItemForm","error","onAddItemClick","newText","addItem","classNameForInput","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","TodoList","localStorageKey","taskId","filter","getTasks","getDateString","date","Date","split","addTask","newTask","v1","newTasks","newFilterValue","changeTask","obj","timeStatus","t","this","Preloader","preloader","alt","marginTop","initialState","loading","Tuesday","todolists","addTodoList","newTodoList","getTodoLists","tl","setTimeout","setLoading","connect","isLoading","App","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.195e5dad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wolf.1ec4071b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondQual\":\"Quality_secondQual__2vwRk\",\"qual\":\"Quality_qual__1WsC7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qualities\":\"Qualities_qualities__3q5fV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"CounterNames_counter__2r2Ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"Value_value__2604i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"ShowName_names__38j1I\"};","module.exports = __webpack_public_path__ + \"static/media/todolists-preloader.a67153fd.svg\";","import React from 'react';\r\nimport style from './Message.module.css';\r\nimport ava from './wolf.jpg';\r\n\r\nconst Message = () => {\r\n    return (\r\n        <div className={style.message}>\r\n            <img className={style.avatar} src={ava} />\r\n            <div className={style.corner} />\r\n            <div className={style.messageArea}>\r\n                <div className={style.name}>Роман Макаревич</div>\r\n                <div className={style.content}>Выполнил второе заданиееееееееееееееееееееееееееееееееееееееееееееее</div>\r\n                <div className={style.time}>07:15</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport style from \"./Quality.module.css\"\r\n\r\nconst Quality = (props) => {\r\n        return (\r\n            <div className={style[props.styles]}>{props.quality}</div>\r\n        );\r\n    };\r\n\r\nexport default Quality;","import React from \"react\";\r\nimport Quality from \"./Quality/Quality\";\r\nimport style from \"./Qualities.module.css\"\r\n\r\nclass Qualities extends React.Component {\r\n    state = {\r\n        qualities: [\r\n            {quality: \"Ловкий\", id: 1},\r\n            {quality: \"Сильный\", id: 2},\r\n            {quality: \"Смелый\", id: 3}\r\n        ]\r\n    };\r\n\r\n    render = () => {\r\n        let newQualities = this.state.qualities.map((quality, index) => {\r\n            return <Quality\r\n                key={quality.id}\r\n                quality={quality.quality}\r\n                styles={index === 1 ? \"secondQual\" : \"qual\"}/>\r\n        });\r\n\r\n        return (\r\n            <div className={style.qualities}>\r\n            {newQualities}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Qualities;","import React from 'react';\r\nimport style from './Value.module.css';\r\n\r\nconst Value = ({counterValue}) => {\r\n    return (\r\n        <span className={style.value}>Counter: {counterValue}</span>\r\n    );\r\n};\r\n\r\nexport default Value;","import React from 'react';\r\nimport style from './ShowName.module.css';\r\n\r\n\r\nconst ShowName = (props) => {\r\n    const {names} = props;\r\n    return (\r\n        <div className={style.names}>{names.map((n, i) => <div key={i}>{n.name}</div>)}</div>\r\n    );\r\n};\r\n\r\n\r\nexport default ShowName;","import React from 'react';\r\n\r\nconst AddNameButton = ({addName}) => {\r\n    return (\r\n        <button onClick={addName}>Add Name</button>\r\n    );\r\n};\r\n\r\nexport default AddNameButton;","import React from 'react';\r\nimport AddNameButton from \"../AddNameButton/AddNameButton\";\r\n\r\nclass InputAddItem extends React.Component {\r\n    state = {\r\n        currentName: \"\",\r\n        errorStatus: false\r\n    };\r\n\r\n    setErrorStatus = (errStatus) => {\r\n        this.setState({errorStatus: errStatus})\r\n    };\r\n\r\n    onCurrentNameChange = (e) => {\r\n        this.setState({currentName: e.currentTarget.value});\r\n        this.setErrorStatus(false)\r\n    };\r\n\r\n    addName = () => {\r\n        let newCurrentName = this.state.currentName;\r\n        if (newCurrentName === \"\") {\r\n            this.setErrorStatus(true);\r\n        } else {\r\n            this.setState({currentName: \"\"});\r\n            this.props.addName(newCurrentName);\r\n            this.setErrorStatus(false);\r\n        }\r\n    };\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.addName();\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        let inputClass = this.state.errorStatus ? \"error\" : \"\";\r\n\r\n        return (\r\n            <div>\r\n                <input\r\n                    onChange={this.onCurrentNameChange}\r\n                    value={this.state.currentName}\r\n                    type=\"text\"\r\n                    onKeyPress={this.onKeyPress}\r\n                    className={inputClass}\r\n                    placeholder={\"Write your name :)\"}\r\n                />\r\n                <AddNameButton addName={this.addName}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputAddItem;","import React from 'react';\r\nimport style from './CounterNames.module.css';\r\nimport Value from \"./Value/Value\";\r\nimport ShowName from \"./ShowName/ShowName\";\r\nimport InputAddItem from \"./InputAddItem/InputAddItem\";\r\n\r\nclass CounterNames extends React.Component {\r\n    state = {\r\n        names: [],\r\n    };\r\n\r\n    addName = (newCurrentName) => {\r\n        this.setState((state) => {\r\n            return (\r\n                {names: [...state.names, {name: newCurrentName}]}\r\n            )\r\n        }, () => {\r\n            alert(`Привет, ${this.state.names[this.state.names.length - 1].name}!`)\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={style.counter}>\r\n                <div>Names counter</div>\r\n                <Value counterValue={this.state.names.length}/>\r\n                <InputAddItem addName={this.addName}/>\r\n                <ShowName names={this.state.names}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CounterNames;","import React from 'react';\r\nimport Message from \"./Message/Message\";\r\nimport Qualities from \"./Qualities/Qualities\";\r\nimport CounterNames from \"./CounterNames/CounterNames\";\r\n\r\nconst Monday = (props) => {\r\n    return (\r\n        <div className=\"monday\">\r\n            <Message/>\r\n            <Qualities/>\r\n            <CounterNames/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Monday;\r\n","import React from 'react';\r\nimport style from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={style.navbar}>\r\n            <nav className={style.navbarPanel}>\r\n                    <div className={style.nav}>\r\n                        <NavLink to={\"/monday\"} activeClassName={style.active}>Monday</NavLink>\r\n                    </div>\r\n                    <div className={style.nav}>\r\n                        <NavLink to={\"/tuesday\"} activeClassName={style.active}>Tuesday</NavLink>\r\n                    </div>\r\n            </nav>\r\n            <div className={style.navigation}>Navigation</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport '../../App.css';\n\nclass TodoListTask extends React.Component {\n    onIsDoneChanged = (e) => {\n        this.props.changeStatus(this.props.task.id, e.currentTarget.checked);\n    };\n\n    onTitleChanged = (e) => {\n        this.props.changeTitle(this.props.task.id, e.currentTarget.value);\n    };\n\n    onPriorityChange = (e) => {\n        this.props.changePriority(this.props.task.id, e.currentTarget.value)\n    };\n\n    state = {\n        editTitleMode: false,\n        editPriorityMode: false,\n        taskHover: false\n    };\n\n    activateEditMode = (target) => {\n        this.setState({[target]: true});\n    };\n\n    deactivateEditMode = (target) => {\n        this.setState({[target]: false});\n    };\n\n    deleteTask = () => {\n        this.props.deleteTask(this.props.task.id);\n    };\n\n    handleMouseIn = () => {\n        this.setState({taskHover: true})\n    };\n    handleMouseOut = () => {\n        this.setState({taskHover: false})\n    };\n\n    render = () => {\n        let containerCssClass = this.props.task.isDone ? \"todoList-task done\" : \"todoList-task\";\n\n        return (\n            <div className=\"task-container\">\n                <div className={containerCssClass}\n                     onMouseOver={this.handleMouseIn}\n                     onMouseOut={this.handleMouseOut}>\n                    <input type=\"checkbox\" checked={this.props.task.isDone}\n                           onChange={this.onIsDoneChanged}/>\n                    {this.state.editTitleMode\n                        ? <input onBlur={() => this.deactivateEditMode(\"editTitleMode\")}\n                                 onChange={this.onTitleChanged}\n                                 autoFocus={true}\n                                 value={this.props.task.title}/>\n                        : <span onClick={() => this.activateEditMode(\"editTitleMode\")}>{this.props.task.title}</span>\n                    }\n                    <span> priority: </span>\n                    {this.state.editPriorityMode\n                        ? <select onBlur={() => this.deactivateEditMode(\"editPriorityMode\")}\n                                  name={\"priority\"} size={\"1\"}\n                                  onChange={this.onPriorityChange}>\n                            <option disabled={true} selected={true}>select priority</option>\n                            <option>low</option>\n                            <option>middle</option>\n                            <option>high</option>\n                        </select>\n                        : <span\n                            onClick={() => this.activateEditMode(\"editPriorityMode\")}>{this.props.task.priority}</span>\n                    }\n                    <button onClick={this.deleteTask}>x</button>\n                </div>\n                {this.state.taskHover &&\n                <div>\n                    <div className=\"time-status-corner\"/>\n                    <div className=\"time-status\">\n                        <div>created: {this.props.task.created}</div>\n                        <div>updated: {this.props.task.updated}</div>\n                        <div>finished: {this.props.task.finished}</div>\n                    </div>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default TodoListTask;\n\n","import React from 'react';\nimport '../../App.css';\nimport TodoListTask from \"./TodoListTask\";\n\nclass TodoListTasks extends React.Component {\n    render = () => {\n\n        let tasksElements = this.props.tasks.map(task =>\n            <TodoListTask key={task.id}\n                          task={task}\n                          changeStatus={this.props.changeStatus}\n                          changeTitle={this.props.changeTitle}\n                          changePriority={this.props.changePriority}\n                          deleteTask={this.props.deleteTask}\n            />);\n\n        return (\n            <div className=\"todoList-tasks\">\n                {tasksElements}\n            </div>\n        );\n    }\n}\n\nexport default TodoListTasks;\n\n","import React from 'react';\nimport '../../App.css';\n\nclass TodoListFooter extends React.Component {\n    state = {\n        isHidden: false\n    };\n\n    onAllFilterClick = () => { this.props.changeFilter(\"All\") };\n    onCompletedFilterClick = () => { this.props.changeFilter(\"Completed\") };\n    onActiveFilterClick = () => { this.props.changeFilter(\"Active\") };\n    onShowFiltersClick = () => { this.setState({isHidden: true}) };\n    onHideFiltersClick = () => { this.setState({isHidden: false}) };\n\n    render = () => {\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\n\n        return (\n            <div className=\"todoList-footer\">\n                { !this.state.isHidden && <div>\n                     <button onClick={ this.onAllFilterClick } className={classForAll}>All</button>\n                     <button onClick={ this.onCompletedFilterClick } className={classForCompleted}>Completed</button>\n                     <button onClick={ this.onActiveFilterClick } className={classForActive}>Active</button>\n                  </div>\n                }\n                { !this.state.isHidden && <span onClick={ this.onShowFiltersClick }>hide</span> }\n                { this.state.isHidden && <span onClick={ this.onHideFiltersClick }>show</span> }\n            </div>\n        );\n    }\n}\n\nexport default TodoListFooter;\n\n","import React from 'react';\nimport '../../App.css';\n\nclass TodoListTitle extends React.Component {\n   render = () => {\n        return (\n                <h3 className=\"todoList-header__title\">{this.props.title}</h3>\n        );\n    };\n}\n\nexport default TodoListTitle;\n\n","import React from 'react';\nimport '../../App.css';\n\nclass AddNewItemForm extends React.Component {\n    state = {\n        error: false,\n        title: \"\"\n    };\n\n    onAddItemClick = () => {\n        let newText = this.state.title;\n        this.setState({title: \"\"});\n\n        if (newText === \"\") {\n            this.setState({error: true});\n        } else {\n            this.setState({error: false});\n            // передаём новый текст наружу\n            this.props.addItem(newText);\n        }\n    };\n\n    onTitleChanged = (e) => {\n        this.setState({\n            error: false,\n            title: e.currentTarget.value\n        });\n    };\n\n    onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            this.onAddItemClick();\n        }\n    };\n\n    render = () => {\n        let classNameForInput = this.state.error ? \"error\" : \"\";\n\n        return (\n            <div className=\"todoList-newTaskForm\">\n                <input className={classNameForInput} type=\"text\" placeholder=\"New item name\"\n                       onChange={this.onTitleChanged}\n                       onKeyPress={this.onKeyPress}\n                       value={this.state.title}\n                />\n                <button onClick={this.onAddItemClick}>Add</button>\n            </div>\n\n        );\n    }\n}\n\nexport default AddNewItemForm;\n\n","export const saveState = (key, state,) => {\r\n    let stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString);\r\n};\r\n\r\nexport const restoreState = (key, defaultState) => {\r\n    let stateAsString = localStorage.getItem(key);\r\n    if (stateAsString != null) {\r\n       return JSON.parse(stateAsString);\r\n    } else {\r\n        return defaultState;\r\n    }\r\n};","import React from 'react';\nimport '../../App.css';\nimport TodoListTasks from \"./TodoListTasks\";\nimport TodoListFooter from \"./TodoListFooter\";\nimport TodoListTitle from \"./TodoListTitle\";\nimport AddNewItemForm from \"./AddNewItemForm\";\nimport {restoreState, saveState} from \"./stateFunctions\";\nimport {v1} from 'uuid';\n\nclass TodoList extends React.Component {\n    state = {\n        tasks: [],\n        filterValue: \"All\"\n    };\n\n    localStorageKey = \"our-state-\" + this.props.id;\n\n    componentDidMount() {\n        this.getTasks();\n    };\n\n    deleteTask = (taskId) => {\n        this.setState({tasks: this.state.tasks.filter(task => taskId !== task.id)}, () => {\n            saveState(this.localStorageKey, this.state)\n        })\n    };\n\n    getTasks = () => {\n        let state = restoreState(this.localStorageKey, this.state);\n        this.setState(state);\n    };\n\n    getDateString = () => {\n        const date = new Date();\n        return `${date}`.split(\"G\")[0];\n    };\n\n    addTask = (newText) => {\n        const date = this.getDateString();\n        let newTask = {\n            id: v1(),\n            title: newText,\n            isDone: false,\n            priority: \"low\",\n            created: date,\n            updated: date,\n            finished: \"not finished\"\n        };\n        let newTasks = [...this.state.tasks, newTask];\n        this.setState({tasks: newTasks}, () => {\n            saveState(this.localStorageKey, this.state)\n        });\n    };\n\n    changeFilter = (newFilterValue) => {\n        this.setState({filterValue: newFilterValue}, () => {\n            saveState(this.localStorageKey, this.state)\n        });\n    };\n\n    changeTask = (taskId, obj, timeStatus) => {\n        let newTasks = this.state.tasks.map(t => {\n            if (t.id !== taskId) {\n                return t;\n            } else {\n                return {...t, ...obj, ...timeStatus};\n            }\n        });\n        this.setState({tasks: newTasks}, () => {\n            saveState(this.localStorageKey, this.state)\n        });\n    };\n\n    changeStatus = (taskId, isDone) => {\n        const date = this.getDateString();\n        let finished;\n        isDone ? finished = date : finished = \"not finished\";\n        this.changeTask(taskId, {isDone}, {finished});\n    };\n    changeTitle = (taskId, title) => {\n        const date = this.getDateString();\n        this.changeTask(taskId, {title}, {updated: date});\n    };\n    changePriority = (taskId, priority) => {\n        const date = this.getDateString();\n        this.changeTask(taskId, {priority}, {updated: date});\n    };\n\n    render = () => {\n        return (\n            <div className=\"todoList\">\n                <div className=\"todoList-header\">\n                    <TodoListTitle title={this.props.title}/>\n                    <AddNewItemForm addItem={this.addTask}/>\n                </div>\n\n                <TodoListTasks changeStatus={this.changeStatus}\n                               changeTitle={this.changeTitle}\n                               deleteTask={this.deleteTask}\n                               changePriority={this.changePriority}\n                               tasks={this.state.tasks.filter(t => {\n                                   if (this.state.filterValue === \"All\") {\n                                       return true;\n                                   }\n                                   if (this.state.filterValue === \"Active\") {\n                                       return t.isDone === false;\n                                   }\n                                   if (this.state.filterValue === \"Completed\") {\n                                       return t.isDone === true;\n                                   }\n                               })}/>\n                <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\n            </div>\n        );\n    }\n}\n\nexport default TodoList;\n\n","import React from \"react\";\r\nimport preloader from \"../../assets/img/todolists-preloader.svg\"\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <>\r\n            <img src={preloader} alt={\"loading\"} style={{marginTop: 100}}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Preloader;","const SET_LOADING = \"SET-LOADING\";\r\n\r\nconst initialState = {loading: true};\r\n\r\nexport const loadingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOADING:\r\n            debugger\r\n            return {...state, loading: action.isLoading};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setLoading = (isLoading) => ({type: SET_LOADING, isLoading});","import React from 'react';\r\nimport '../../App.css';\r\nimport TodoList from \"./TodoList\";\r\nimport AddNewItemForm from \"./AddNewItemForm\";\r\nimport {restoreState, saveState} from \"./stateFunctions\";\r\nimport {v1} from 'uuid';\r\nimport Preloader from \"../common/Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {setLoading} from \"../../redux/loadingReducer\";\r\n\r\nclass Tuesday extends React.Component {\r\n    state = {\r\n        todolists: []\r\n    };\r\n\r\n    addTodoList = (title) => {\r\n        let newTodoList = {\r\n            id: v1(),\r\n            title: title\r\n        };\r\n        this.setState({todolists: [...this.state.todolists, newTodoList]}, () => {\r\n            saveState(\"todolists-state\", this.state.todolists);\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getTodoLists();\r\n        setTimeout(() => {\r\n            this.props.setLoading(false);\r\n        }, 3000)\r\n    }\r\n\r\n    getTodoLists = () => {\r\n        let todolists = restoreState(\"todolists-state\", this.state.todolists);\r\n        this.setState({todolists});\r\n    };\r\n\r\n    render = () => {\r\n        const todolists = this.state.todolists.map(tl => <TodoList key={tl.id} id={tl.id} title={tl.title}/>);\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.loading\r\n                        ? <Preloader/>\r\n                        : <>\r\n                            <div className=\"tuesday\">\r\n                                <AddNewItemForm addItem={this.addTodoList}/>\r\n                            </div>\r\n                            <div className=\"todolists\">\r\n                                {todolists}\r\n                            </div>\r\n                        </>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({loading: state.loading.loading});\r\n\r\nexport default connect(mapStateToProps, {setLoading})(Tuesday);\r\n\r\n","import React from 'react';\nimport Monday from \"./components/Monday/Monday\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {Route} from \"react-router-dom\";\nimport Tuesday from \"./components/Tuesday/Tuesday\";\n\nclass App extends React.Component {\n    render = () => {\n        return (\n            <div className=\"App\">\n                <Navbar/>\n                <Route path={\"/monday\"} render={() => <Monday/>}/>\n                <Route path={\"/tuesday\"} render={() => <Tuesday/>}/>\n            </div>\n        );\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {loadingReducer} from \"./loadingReducer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    loading: loadingReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__BvlGJ\",\"avatar\":\"Message_avatar__2CiMR\",\"corner\":\"Message_corner__2WaX_\",\"messageArea\":\"Message_messageArea__3Cixy\",\"name\":\"Message_name__2fko0\",\"content\":\"Message_content__13oyF\",\"time\":\"Message_time__LL6pq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2Tjr6\",\"navbarPanel\":\"Navbar_navbarPanel__3sy2a\",\"navigation\":\"Navbar_navigation__13tA7\",\"nav\":\"Navbar_nav__JxV5s\",\"active\":\"Navbar_active__1J3_W\"};"],"sourceRoot":""}